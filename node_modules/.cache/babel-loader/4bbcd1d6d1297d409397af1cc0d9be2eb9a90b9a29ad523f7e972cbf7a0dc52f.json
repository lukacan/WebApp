{"ast":null,"code":"\"use client\";\n\n// src/react.tsx\nimport { useEffect } from \"react\";\n\n// package.json\nvar name = \"@vercel/analytics\";\nvar version = \"1.0.1\";\n\n// src/queue.ts\nvar initQueue = () => {\n  if (window.va) return;\n  window.va = function a() {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n\n// src/utils.ts\nfunction isBrowser() {\n  return typeof window !== \"undefined\";\n}\nfunction detectEnvironment() {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === \"development\" || env === \"test\") {\n      return \"development\";\n    }\n  } catch (e) {}\n  return \"production\";\n}\nfunction setMode() {\n  let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"auto\";\n  if (mode === \"auto\") {\n    window.vam = detectEnvironment();\n    return;\n  }\n  window.vam = mode;\n}\nfunction getMode() {\n  return window.vam || \"production\";\n}\nfunction isProduction() {\n  return getMode() === \"production\";\n}\nfunction isDevelopment() {\n  return getMode() === \"development\";\n}\nfunction removeKey(key, _ref) {\n  let {\n    [key]: _,\n    ...rest\n  } = _ref;\n  return rest;\n}\nfunction parseProperties(properties, options) {\n  let props = properties;\n  const errorProperties = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === \"object\" && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(`The following properties are not valid: ${errorProperties.join(\", \")}. Only strings, numbers, booleans, and null are allowed.`);\n  }\n  return props;\n}\n\n// src/generic.ts\nfunction inject() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    debug: true\n  };\n  var _a;\n  if (!isBrowser()) return;\n  setMode(props.mode);\n  initQueue();\n  if (props.beforeSend) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"beforeSend\", props.beforeSend);\n  }\n  const src = isDevelopment() ? \"https://va.vercel-scripts.com/v1/script.debug.js\" : \"/_vercel/insights/script.js\";\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n  const script = document.createElement(\"script\");\n  script.src = src;\n  script.defer = true;\n  script.setAttribute(\"data-sdkn\", name);\n  script.setAttribute(\"data-sdkv\", version);\n  if (isDevelopment() && props.debug === false) {\n    script.setAttribute(\"data-debug\", \"false\");\n  }\n  document.head.appendChild(script);\n}\nfunction track(name2, properties) {\n  var _a, _b;\n  if (!isBrowser()) {\n    console.warn(\"[Vercel Web Analytics] Server-side execution of `track()` is currently not supported.\");\n    return;\n  }\n  if (!properties) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"event\", {\n      name: name2\n    });\n    return;\n  }\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction()\n    });\n    (_b = window.va) == null ? void 0 : _b.call(window, \"event\", {\n      name: name2,\n      data: props\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      console.error(err);\n    }\n  }\n}\n\n// src/react.tsx\nfunction Analytics(_ref2) {\n  let {\n    beforeSend,\n    debug = true,\n    mode = \"auto\"\n  } = _ref2;\n  useEffect(() => {\n    inject({\n      beforeSend,\n      debug,\n      mode\n    });\n  }, [beforeSend, debug, mode]);\n  return null;\n}\nvar react_default = {\n  Analytics,\n  track\n};\nexport { Analytics, react_default as default, track };","map":{"version":3,"names":["useEffect","initQueue","window","va","a","_len","arguments","length","params","Array","_key","vaq","push","isBrowser","detectEnvironment","env","process","NODE_ENV","e","setMode","mode","undefined","vam","getMode","isProduction","isDevelopment","removeKey","key","_ref","_","rest","parseProperties","properties","options","props","errorProperties","value","Object","entries","strip","Error","join","inject","debug","_a","beforeSend","call","src","document","head","querySelector","script","createElement","defer","setAttribute","name","version","appendChild","track","name2","_b","console","warn","data","err","error","Analytics","_ref2","react_default"],"sources":["/home/andrej/solana/WebApp/node_modules/@vercel/analytics/src/react.tsx","/home/andrej/solana/WebApp/node_modules/@vercel/analytics/src/queue.ts","/home/andrej/solana/WebApp/node_modules/@vercel/analytics/src/utils.ts","/home/andrej/solana/WebApp/node_modules/@vercel/analytics/src/generic.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { inject, track } from './generic';\nimport type { AnalyticsProps } from './types';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @example\n * ```js\n * import { Analytics } from '@vercel/analytics/react';\n *\n * export default function App() {\n *  return (\n *   <div>\n *    <Analytics />\n *    <h1>My App</h1>\n *  </div>\n * );\n * }\n * ```\n */\nfunction Analytics({\n  beforeSend,\n  debug = true,\n  mode = 'auto',\n}: AnalyticsProps): null {\n  useEffect(() => {\n    inject({ beforeSend, debug, mode });\n  }, [beforeSend, debug, mode]);\n\n  return null;\n}\nexport { track, Analytics };\nexport type { AnalyticsProps };\n\n// eslint-disable-next-line import/no-default-export\nexport default {\n  Analytics,\n  track,\n};\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.va) return;\n\n  window.va = function a(...params): void {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n","import type { AllowedPropertyValues, Mode } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function setMode(mode: Mode = 'auto'): void {\n  if (mode === 'auto') {\n    window.vam = detectEnvironment();\n    return;\n  }\n\n  window.vam = mode;\n}\n\nexport function getMode(): Mode {\n  return window.vam || 'production';\n}\n\nexport function isProduction(): boolean {\n  return getMode() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return getMode() === 'development';\n}\n\nfunction removeKey(\n  key: string,\n  { [key]: _, ...rest },\n): Record<string, unknown> {\n  return rest;\n}\n\nexport function parseProperties(\n  properties: Record<string, unknown>,\n  options: {\n    strip?: boolean;\n  },\n): Error | Record<string, AllowedPropertyValues> | undefined {\n  let props = properties;\n  const errorProperties: string[] = [];\n  for (const [key, value] of Object.entries(properties)) {\n    if (typeof value === 'object' && value !== null) {\n      if (options.strip) {\n        props = removeKey(key, props);\n      } else {\n        errorProperties.push(key);\n      }\n    }\n  }\n\n  if (errorProperties.length > 0 && !options.strip) {\n    throw Error(\n      `The following properties are not valid: ${errorProperties.join(\n        ', ',\n      )}. Only strings, numbers, booleans, and null are allowed.`,\n    );\n  }\n  return props as Record<string, AllowedPropertyValues>;\n}\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type { AllowedPropertyValues, AnalyticsProps } from './types';\nimport {\n  isBrowser,\n  parseProperties,\n  setMode,\n  isDevelopment,\n  isProduction,\n} from './utils';\n\n/**\n * Injects the Vercel Web Analytics script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/concepts/analytics/package).\n * @param [props] - Analytics options.\n * @param [props.mode] - The mode to use for the analytics script. Defaults to `auto`.\n *  - `auto` - Automatically detect the environment.  Uses `production` if the environment cannot be determined.\n *  - `production` - Always use the production script. (Sends events to the server)\n *  - `development` - Always use the development script. (Logs events to the console)\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n */\nexport function inject(\n  props: AnalyticsProps = {\n    debug: true,\n  },\n): void {\n  if (!isBrowser()) return;\n\n  setMode(props.mode);\n\n  initQueue();\n\n  if (props.beforeSend) {\n    window.va?.('beforeSend', props.beforeSend);\n  }\n\n  const src = isDevelopment()\n    ? 'https://va.vercel-scripts.com/v1/script.debug.js'\n    : '/_vercel/insights/script.js';\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return;\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.setAttribute('data-sdkn', packageName);\n  script.setAttribute('data-sdkv', version);\n\n  if (isDevelopment() && props.debug === false) {\n    script.setAttribute('data-debug', 'false');\n  }\n\n  document.head.appendChild(script);\n}\n\n/**\n * Tracks a custom event. Please refer to the [documentation](https://vercel.com/docs/concepts/analytics/custom-events) for more information on custom events.\n * @param name - The name of the event.\n * * Examples: `Purchase`, `Click Button`, or `Play Video`.\n * @param [properties] - Additional properties of the event. Nested objects are not supported. Allowed values are `string`, `number`, `boolean`, and `null`.\n */\nexport function track(\n  name: string,\n  properties?: Record<string, AllowedPropertyValues>,\n): void {\n  if (!isBrowser()) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[Vercel Web Analytics] Server-side execution of `track()` is currently not supported.',\n    );\n    return;\n  }\n\n  if (!properties) {\n    window.va?.('event', { name });\n    return;\n  }\n\n  try {\n    const props = parseProperties(properties, {\n      strip: isProduction(),\n    });\n\n    window.va?.('event', {\n      name,\n      data: props,\n    });\n  } catch (err) {\n    if (err instanceof Error && isDevelopment()) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n}\n\n// eslint-disable-next-line import/no-default-export\nexport default {\n  inject,\n  track,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}